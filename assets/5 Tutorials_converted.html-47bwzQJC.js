import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as i,b as t}from"./app-1sB8-tQp.js";const s="/assets/20250311_2311093256-h6YL_UAG.png",n="/assets/20250311_2311106990-BFotV8XH.png",r="/assets/20250311_2311104442-COhQtlZU.png",l="/assets/20250311_2311109775-COAKiPTS.png",p="/assets/20250311_2311102233-DdW2N46d.png",h="/assets/20250311_2311103264-CAayT5Hq.png",o="/assets/20250311_2311103068-BvkXIX3H.png",c="/assets/20250311_2311118156-BHpHMPcJ.png",d="/assets/20250311_2311119763-CFsAdPcf.png",g="/assets/20250311_2311115721-Cm2LBeKS.png",u="/assets/20250311_2311116735-Ba5lZfWH.png",m={},f=t('<h2 id="发布-api" tabindex="-1"><a class="header-anchor" href="#发布-api"><span>发布 API</span></a></h2><h3 id="思维导图" tabindex="-1"><a class="header-anchor" href="#思维导图"><span>思维导图</span></a></h3><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="概念介绍" tabindex="-1"><a class="header-anchor" href="#概念介绍"><span>概念介绍</span></a></h3><p>🔶上游（Upstream）</p><p>上游：应用层服务 / 节点 的抽象；</p><p>路由 / 服务 与 上游 对应关系可以为：多对一。</p><p>🔶服务（Service）</p><p>服务：某类 API 的抽象？（一组 路由 的抽象？）</p><p>对应关系：服务与上游 通常是 一对一，路由与服务 通常是 多对一。</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>🔶路由（Route）</p><p>路由包含：匹配规则、插件配置、上游信息；</p><p>APISIX 通过 路由定义规则 来匹配客户端请求，根据匹配结果加载并执行相应的 插件，最后把请求转发给指定的 上游服务。</p><h2 id="保护-api" tabindex="-1"><a class="header-anchor" href="#保护-api"><span>保护 API</span></a></h2><h3 id="思维导图-1" tabindex="-1"><a class="header-anchor" href="#思维导图-1"><span>思维导图</span></a></h3><figure><img src="'+r+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h3 id="概念介绍-1" tabindex="-1"><a class="header-anchor" href="#概念介绍-1"><span>概念介绍</span></a></h3><p>🔶插件（Plugin）</p><p>插件，在 HTTP 请求 或 响应生命周期期间执行的、针对请求的个性化策略；</p><p>插件是扩展 APISIX 应用层能力的关键机制，也是使用 APISIX 时最常用的资源对象；</p><p>插件可以与 路由、服务、消费者 绑定；</p><p>插件配置生效优先级：消费者，路由，插件配置，服务；</p><p>插件执行过程：rewrite, access, before_proxy, header_filter, body_filter, log。</p><h2 id="observability-可观测性" tabindex="-1"><a class="header-anchor" href="#observability-可观测性"><span>Observability（可观测性）</span></a></h2><p>APISIX 通过 可观测性插件 来了解 API 行为，进而使得整个业务流程更加清晰。</p><h3 id="监控-api" tabindex="-1"><a class="header-anchor" href="#监控-api"><span>监控 API</span></a></h3><h4 id="思维导图-2" tabindex="-1"><a class="header-anchor" href="#思维导图-2"><span>思维导图</span></a></h4><figure><img src="'+l+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h4 id="api-可观测性" tabindex="-1"><a class="header-anchor" href="#api-可观测性"><span>API 可观测性</span></a></h4><p>可观测性可分为三个关键部分：日志（Logging）、指标（Metrics）、链路追踪（Tracing）。</p><h3 id="健康检查" tabindex="-1"><a class="header-anchor" href="#健康检查"><span>健康检查</span></a></h3><p>健康检查：可以在上游节点发生故障 / 迁移时，将请求代理到健康节点上，最大程度避免服务不可用问题；其通过 <code>lua-resty-healthcheck</code> 实现，分为主动检查和被动检查。</p><h4 id="思维导图-3" tabindex="-1"><a class="header-anchor" href="#思维导图-3"><span>思维导图</span></a></h4><figure><img src="'+p+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h3 id="monitor-api-health-check-with-prometheus" tabindex="-1"><a class="header-anchor" href="#monitor-api-health-check-with-prometheus"><span>Monitor API Health Check with Prometheus</span></a></h3><h4 id="思维导图-4" tabindex="-1"><a class="header-anchor" href="#思维导图-4"><span>思维导图</span></a></h4><figure><img src="'+h+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h2 id="manage-api-consumers" tabindex="-1"><a class="header-anchor" href="#manage-api-consumers"><span>Manage API Consumers</span></a></h2><h3 id="思维导图-5" tabindex="-1"><a class="header-anchor" href="#思维导图-5"><span>思维导图</span></a></h3><figure><img src="'+o+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h3 id="消费者-consumer-消费者组-consumer-groups" tabindex="-1"><a class="header-anchor" href="#消费者-consumer-消费者组-consumer-groups"><span>消费者（Consumer）/ 消费者组（Consumer Groups）</span></a></h3><p>Consumer 是 某类服务 / 上游 的消费者，需要与用户认证配合使用。</p><p>Consumer 配置地址：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://127.0.0.1:9180/apisix/admin/consumers</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>不同的 Consumer 请求同一个 API 时，APISIX 会根据当前请求的用户信息，对应不同的 Plugin 或 Upstream 配置。</p><p>插件配置优先级：Consumer &gt; Route &gt; Plugin Config &gt; Service。</p><p>Consumer Groups ，通过其可以在同一个消费者组中启用任意数量的插件，并在一个或多个消费者中引用该消费者组。</p><p>Consumer Groups 配置地址：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://127.0.0.1:9180/apisix/admin/consumer_groups</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="cache-api-response" tabindex="-1"><a class="header-anchor" href="#cache-api-response"><span>Cache API response</span></a></h2><h3 id="思维导图-6" tabindex="-1"><a class="header-anchor" href="#思维导图-6"><span>思维导图</span></a></h3><figure><img src="'+c+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h2 id="add-multiple-api-versions" tabindex="-1"><a class="header-anchor" href="#add-multiple-api-versions"><span>Add multiple API versions</span></a></h2><h3 id="思维导图-7" tabindex="-1"><a class="header-anchor" href="#思维导图-7"><span>思维导图</span></a></h3><figure><img src="'+d+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h2 id="配置客户端与-apisix-之间的双向认证-mtls" tabindex="-1"><a class="header-anchor" href="#配置客户端与-apisix-之间的双向认证-mtls"><span>配置客户端与 APISIX 之间的双向认证(mTLS)</span></a></h2><p>mTLS 是一种双向身份认证的方式，其只有受信任的客户端才可以访问服务端。</p><h3 id="思维导图-8" tabindex="-1"><a class="header-anchor" href="#思维导图-8"><span>思维导图</span></a></h3><figure><img src="'+g+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h2 id="websocket-authentication" tabindex="-1"><a class="header-anchor" href="#websocket-authentication"><span>WebSocket Authentication</span></a></h2><p>通过 APISIX 的插件在进行 WebSocket 通信之前，进行鉴权。</p><h3 id="思维导图-9" tabindex="-1"><a class="header-anchor" href="#思维导图-9"><span>思维导图</span></a></h3><figure><img src="'+u+'" alt="画板" tabindex="0" loading="lazy"><figcaption>画板</figcaption></figure><h3 id="相关概念" tabindex="-1"><a class="header-anchor" href="#相关概念"><span>相关概念</span></a></h3><h4 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket"><span>WebSocket</span></a></h4><p>定义：WebSocket 是一种全双工通信协议，允许客户端和服务端在单个 TCP 连接上进行双向实时通信。（双向通信）</p><p>工作方式：通过 HTTP 协议升级为 WebSocket 连接。</p><h4 id="http-长连接" tabindex="-1"><a class="header-anchor" href="#http-长连接"><span>HTTP 长连接</span></a></h4><p>定义：HTTP 长连接（Keep-Alive）允许在 单个 TCP 连接上发送多个 HTTP 请求和响应，减少频繁建立和连接的开销。（请求-响应模式）</p><p>工作方式：客户端发送请求，服务器响应后，连接保持打开。</p>',71),b=[f];function k(_,v){return i(),a("div",null,b)}const P=e(m,[["render",k],["__file","5 Tutorials_converted.html.vue"]]),y=JSON.parse('{"path":"/middleware/apisix/Apache%20APISIX%20Document%20V3.11/5%20Tutorials_converted.html","title":"5 Tutorial","lang":"zh-CN","frontmatter":{"title":"5 Tutorial","category":["Gateway"],"description":"发布 API 思维导图 概念介绍 🔶上游（Upstream） 上游：应用层服务 / 节点 的抽象； 路由 / 服务 与 上游 对应关系可以为：多对一。 🔶服务（Service） 服务：某类 API 的抽象？（一组 路由 的抽象？） 对应关系：服务与上游 通常是 一对一，路由与服务 通常是 多对一。 🔶路由（Route） 路由包含：匹配规则、插件配...","head":[["meta",{"property":"og:url","content":"https://raylan-chen.github.io/middleware/apisix/Apache%20APISIX%20Document%20V3.11/5%20Tutorials_converted.html"}],["meta",{"property":"og:site_name","content":"MyBlog"}],["meta",{"property":"og:title","content":"5 Tutorial"}],["meta",{"property":"og:description","content":"发布 API 思维导图 概念介绍 🔶上游（Upstream） 上游：应用层服务 / 节点 的抽象； 路由 / 服务 与 上游 对应关系可以为：多对一。 🔶服务（Service） 服务：某类 API 的抽象？（一组 路由 的抽象？） 对应关系：服务与上游 通常是 一对一，路由与服务 通常是 多对一。 🔶路由（Route） 路由包含：匹配规则、插件配..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-11T16:23:24.000Z"}],["meta",{"property":"article:author","content":"raylan.chen"}],["meta",{"property":"article:modified_time","content":"2025-03-11T16:23:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5 Tutorial\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-11T16:23:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"raylan.chen\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"发布 API","slug":"发布-api","link":"#发布-api","children":[{"level":3,"title":"思维导图","slug":"思维导图","link":"#思维导图","children":[]},{"level":3,"title":"概念介绍","slug":"概念介绍","link":"#概念介绍","children":[]}]},{"level":2,"title":"保护 API","slug":"保护-api","link":"#保护-api","children":[{"level":3,"title":"思维导图","slug":"思维导图-1","link":"#思维导图-1","children":[]},{"level":3,"title":"概念介绍","slug":"概念介绍-1","link":"#概念介绍-1","children":[]}]},{"level":2,"title":"Observability（可观测性）","slug":"observability-可观测性","link":"#observability-可观测性","children":[{"level":3,"title":"监控 API","slug":"监控-api","link":"#监控-api","children":[]},{"level":3,"title":"健康检查","slug":"健康检查","link":"#健康检查","children":[]},{"level":3,"title":"Monitor API Health Check with Prometheus","slug":"monitor-api-health-check-with-prometheus","link":"#monitor-api-health-check-with-prometheus","children":[]}]},{"level":2,"title":"Manage API Consumers","slug":"manage-api-consumers","link":"#manage-api-consumers","children":[{"level":3,"title":"思维导图","slug":"思维导图-5","link":"#思维导图-5","children":[]},{"level":3,"title":"消费者（Consumer）/ 消费者组（Consumer Groups）","slug":"消费者-consumer-消费者组-consumer-groups","link":"#消费者-consumer-消费者组-consumer-groups","children":[]}]},{"level":2,"title":"Cache API response","slug":"cache-api-response","link":"#cache-api-response","children":[{"level":3,"title":"思维导图","slug":"思维导图-6","link":"#思维导图-6","children":[]}]},{"level":2,"title":"Add multiple API versions","slug":"add-multiple-api-versions","link":"#add-multiple-api-versions","children":[{"level":3,"title":"思维导图","slug":"思维导图-7","link":"#思维导图-7","children":[]}]},{"level":2,"title":"配置客户端与 APISIX 之间的双向认证(mTLS)","slug":"配置客户端与-apisix-之间的双向认证-mtls","link":"#配置客户端与-apisix-之间的双向认证-mtls","children":[{"level":3,"title":"思维导图","slug":"思维导图-8","link":"#思维导图-8","children":[]}]},{"level":2,"title":"WebSocket Authentication","slug":"websocket-authentication","link":"#websocket-authentication","children":[{"level":3,"title":"思维导图","slug":"思维导图-9","link":"#思维导图-9","children":[]},{"level":3,"title":"相关概念","slug":"相关概念","link":"#相关概念","children":[]}]}],"git":{"createdTime":1741710204000,"updatedTime":1741710204000,"contributors":[{"name":"Raylan.Chen","email":"chen.z.my@qq.com","commits":1}]},"readingTime":{"minutes":2.77,"words":830},"filePathRelative":"middleware/apisix/Apache APISIX Document V3.11/5 Tutorials_converted.md","localizedDate":"2025年3月12日","excerpt":"<h2>发布 API</h2>\\n<h3>思维导图</h3>\\n<figure><figcaption></figcaption></figure>\\n<h3>概念介绍</h3>\\n<p>🔶上游（Upstream）</p>\\n<p>上游：应用层服务 / 节点 的抽象；</p>\\n<p>路由 / 服务 与 上游 对应关系可以为：多对一。</p>\\n<p>🔶服务（Service）</p>\\n<p>服务：某类 API 的抽象？（一组 路由 的抽象？）</p>\\n<p>对应关系：服务与上游 通常是 一对一，路由与服务 通常是 多对一。</p>\\n<figure><figcaption></figcaption></figure>","autoDesc":true}');export{P as comp,y as data};
