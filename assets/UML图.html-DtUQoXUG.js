import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as t,b as r}from"./app-1sB8-tQp.js";const i="/assets/02-uml-diagram-types-BSy4iaqd.png",n="/assets/image-BCxXpGL6.png",l="/assets/image2-UYOQUcTW.png",o="/assets/Uml_classes_en.svg-CLKLDVIe.png",p="/assets/jzjv0xqpix-e7a8pnCd.png",s="/assets/vdfl2tolj4-BSsR-7X-.png",c="/assets/z2hc84u85p-CcvYQusR.png",g="/assets/l3twdqf7fi-Dk8bRHyG.png",m="/assets/lplv4x1l3v-BsLSJgJl.png",d="/assets/vln39o32er-CEaHUwZM.png",h={},u=r('<h1 id="uml图" tabindex="-1"><a class="header-anchor" href="#uml图"><span>UML图</span></a></h1><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h2><ul><li><a href="https://cloud.tencent.com/developer/article/1684161" target="_blank" rel="noopener noreferrer">一文掌握14种UML图-腾讯云开发者社区-腾讯云</a></li><li><a href="https://design-patterns.readthedocs.io/zh-cn/latest/read_uml.html" target="_blank" rel="noopener noreferrer">看懂UML类图和时序图 — Graphic Design Patterns</a></li><li><a href="https://www.visual-paradigm.com/cn/guide/uml-unified-modeling-language/what-is-uml/#timing-diagram" target="_blank" rel="noopener noreferrer">什么是统一建模语言（UML）？</a></li><li><a href="https://zh.wikipedia.org/wiki/%E9%A1%9E%E5%88%A5%E5%9C%96" target="_blank" rel="noopener noreferrer">类图 - 维基百科，自由的百科全书</a></li><li><a href="https://www.xiehai.zone/2021-12-11-mermaid-class-diagram.html#%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6" target="_blank" rel="noopener noreferrer">Mermaid之类图(classDiagram) | PasseRR&#39;s Blog</a></li><li><a href="https://zhuanlan.zhihu.com/p/109655171" target="_blank" rel="noopener noreferrer">30分钟学会UML类图 - 知乎</a></li><li><a href="https://mermaid.js.org/syntax/classDiagram.html" target="_blank" rel="noopener noreferrer">Class diagrams | Mermaid</a> / <a href="https://mermaid.nodejs.cn/syntax/classDiagram.html" target="_blank" rel="noopener noreferrer">类图 | Mermaid 中文网</a></li><li><a href="https://soft.xiaoshujiang.com/docs/grammar/feature/mermaid/" target="_blank" rel="noopener noreferrer">小书匠语法说明之mermaid | 小书匠</a></li></ul><h2 id="uml" tabindex="-1"><a class="header-anchor" href="#uml"><span>UML</span></a></h2><p>🔅统一建模语言（Unified Model Language，UML），由一整套图表组成的标准化建模语言。</p><p>🔅UML 图大致可分为：结构性图 和 行为性图。</p><p>🔅结构性图 显示了系统在不同抽象层次和实现层次上的静态结构以及它们之间的相互关系。结构性图可分为七种类型：</p><ul><li>类图（Class Diagram）</li><li>组件图（Component Diagrm）</li><li>部署图（Deployment Diagram）</li><li>对象图（Object Diagram）</li><li>包图（Package Diagram）</li><li>复合结构图（Composite Structure Diagram）</li><li>轮廓图（Profile Diagram）</li></ul><p>🔅行为性图 显示了系统中对象的动态行为，可用以表达系统随时间的变化。行为性图 可分为七种类型：</p><ul><li>用例图（Use Case Diagram）</li><li>活动图（Activity Diagram）</li><li>状态机图（State Machine Diagram）</li><li>序列图（Sequence Diagram）</li><li>交互概述图（Interaction Overview Diagram）</li><li>时序图（Timing Diagram）</li></ul><figure><img src="'+i+'" alt="图片来源：https://www.visual-paradigm.com/cn/guide/uml-unified-modeling-language/what-is-uml/#timing-diagram" tabindex="0" loading="lazy"><figcaption>图片来源：https://www.visual-paradigm.com/cn/guide/uml-unified-modeling-language/what-is-uml/#timing-diagram</figcaption></figure><h2 id="类图" tabindex="-1"><a class="header-anchor" href="#类图"><span>类图</span></a></h2><p>✨访问修饰符的表示</p><p><code>+</code>: public</p><p><code>-</code>: private</p><p><code>#</code>: protected</p><p><code>~</code>: package / default</p><p><code>$</code>: static</p><p>✨具体类、抽象类、接口 的表示</p><p>1、类（成员变量及类型、方法的参数及返回类型）</p><figure><img src="'+n+'" alt="图片来源：https://zhuanlan.zhihu.com/p/109655171" tabindex="0" loading="lazy"><figcaption>图片来源：https://zhuanlan.zhihu.com/p/109655171</figcaption></figure><p>2、接口（抽象类为<code>&lt;&lt;abstract&gt;&gt;</code>）</p><figure><img src="'+l+'" alt="图片来源：https://zhuanlan.zhihu.com/p/109655171" tabindex="0" loading="lazy"><figcaption>图片来源：https://zhuanlan.zhihu.com/p/109655171</figcaption></figure><p>✨线条与箭头总览：</p><figure><img src="'+o+'" alt="图片来源：https://zh.wikipedia.org/wiki/%E9%A1%9E%E5%88%A5%E5%9C%96" tabindex="0" loading="lazy"><figcaption>图片来源：https://zh.wikipedia.org/wiki/%E9%A1%9E%E5%88%A5%E5%9C%96</figcaption></figure><p>✨泛化（Generalization） / 继承（Inheritance）</p><figure><img src="'+p+'" alt="图片来源：https://cloud.tencent.com/developer/article/1684161" tabindex="0" loading="lazy"><figcaption>图片来源：https://cloud.tencent.com/developer/article/1684161</figcaption></figure><p>✨实现（Realization / Implementation）</p><p>个人的理解记忆：实现有“实”字却比较“虚”（三角形为空心），而继承是“实实在在”的（三角形为实心）。</p><figure><img src="'+s+'" alt="图片来源：https://cloud.tencent.com/developer/article/1684161" tabindex="0" loading="lazy"><figcaption>图片来源：https://cloud.tencent.com/developer/article/1684161</figcaption></figure><p>✨聚合（Aggregation）</p><p>1、代码体现：成员变量。</p><p>2、聚合关系，整体和部分不是强依赖，即使整体不存在了，部分仍可以存在，弱包含，&quot;... owns a ...&quot;。</p><figure><img src="'+c+'" alt="图片来源：https://cloud.tencent.com/developer/article/1684161" tabindex="0" loading="lazy"><figcaption>图片来源：https://cloud.tencent.com/developer/article/1684161</figcaption></figure><p>✨组合（Composition）</p><p>1、组合关系：一种强依赖的特殊聚合关系，如果整体不存在了，则部分也不存在了，强包含，&quot;... is a part of ...&quot;。</p><p>2、代码体现：成员变量。</p><p>3、个人理解性记忆：组合关系比较“实”（菱形为实心），整体不存在则部分也不存在了；而聚合关系整体与部分就比较“虚”了（菱形为实心），整体不存在，部分仍可存在。</p><figure><img src="'+g+'" alt="图片来源：https://cloud.tencent.com/developer/article/1684161" tabindex="0" loading="lazy"><figcaption>图片来源：https://cloud.tencent.com/developer/article/1684161</figcaption></figure><p>✨依赖（Denpendency）</p><p>1、依赖：类 A 使用到了类 B，&quot;... uses a ...&quot;，被依赖对象只作为一种工具，依赖者 并不持有被依赖对象引用，使用关系具有偶然性、临时性、非常弱。</p><p>2、代码体现：函数参数。</p><figure><img src="'+m+'" alt="图片来源：https://cloud.tencent.com/developer/article/1684161" tabindex="0" loading="lazy"><figcaption>图片来源：https://cloud.tencent.com/developer/article/1684161</figcaption></figure><p>✨关联（Association）</p><p>1、关联：两个类之间 / 类与接口之间一种强依赖关系，是一种长期的稳定关系，&quot;... has a...&quot;。</p><p>2、代码体现：<code>People</code>拥有<code>Car</code>成员变量。</p><p>（图片中线存在箭头，可能去掉箭头更合适）</p><figure><img src="'+d+'" alt="图片来源：https://cloud.tencent.com/developer/article/1684161" tabindex="0" loading="lazy"><figcaption>图片来源：https://cloud.tencent.com/developer/article/1684161</figcaption></figure><p>✨具体的使用示例：<a href="https://design-patterns.readthedocs.io/zh-cn/latest/read_uml.html" target="_blank" rel="noopener noreferrer">看懂UML类图和时序图 — Graphic Design Patterns</a></p><h2 id="时序图" tabindex="-1"><a class="header-anchor" href="#时序图"><span>时序图</span></a></h2><p><a href="https://www.cnblogs.com/ywqu/archive/2009/12/22/1629426.html" target="_blank" rel="noopener noreferrer">UML建模之时序图（Sequence Diagram） - 灵动生活 - 博客园</a></p>',51),f=[u];function _(M,b){return t(),a("div",null,f)}const U=e(h,[["render",_],["__file","UML图.html.vue"]]),w=JSON.parse(`{"path":"/development_tool/other/UML%E5%9B%BE.html","title":"UML图","lang":"zh-CN","frontmatter":{"title":"UML图","category":["开发工具"],"description":"UML图 参考链接 一文掌握14种UML图-腾讯云开发者社区-腾讯云 看懂UML类图和时序图 — Graphic Design Patterns 什么是统一建模语言（UML）？ 类图 - 维基百科，自由的百科全书 Mermaid之类图(classDiagram) | PasseRR's Blog 30分钟学会UML类图 - 知乎 Class diagr...","head":[["meta",{"property":"og:url","content":"https://raylan-chen.github.io/development_tool/other/UML%E5%9B%BE.html"}],["meta",{"property":"og:site_name","content":"MyBlog"}],["meta",{"property":"og:title","content":"UML图"}],["meta",{"property":"og:description","content":"UML图 参考链接 一文掌握14种UML图-腾讯云开发者社区-腾讯云 看懂UML类图和时序图 — Graphic Design Patterns 什么是统一建模语言（UML）？ 类图 - 维基百科，自由的百科全书 Mermaid之类图(classDiagram) | PasseRR's Blog 30分钟学会UML类图 - 知乎 Class diagr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-11T16:23:24.000Z"}],["meta",{"property":"article:author","content":"raylan.chen"}],["meta",{"property":"article:modified_time","content":"2025-03-11T16:23:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UML图\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-11T16:23:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"raylan.chen\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]},{"level":2,"title":"UML","slug":"uml","link":"#uml","children":[]},{"level":2,"title":"类图","slug":"类图","link":"#类图","children":[]},{"level":2,"title":"时序图","slug":"时序图","link":"#时序图","children":[]}],"git":{"createdTime":1737018470000,"updatedTime":1741710204000,"contributors":[{"name":"Raylan.Chen","email":"chen.z.my@qq.com","commits":3}]},"readingTime":{"minutes":3.13,"words":938},"filePathRelative":"development_tool/other/UML图.md","localizedDate":"2025年1月16日","excerpt":"\\n<h2>参考链接</h2>\\n<ul>\\n<li><a href=\\"https://cloud.tencent.com/developer/article/1684161\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">一文掌握14种UML图-腾讯云开发者社区-腾讯云</a></li>\\n<li><a href=\\"https://design-patterns.readthedocs.io/zh-cn/latest/read_uml.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">看懂UML类图和时序图 — Graphic Design Patterns</a></li>\\n<li><a href=\\"https://www.visual-paradigm.com/cn/guide/uml-unified-modeling-language/what-is-uml/#timing-diagram\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">什么是统一建模语言（UML）？</a></li>\\n<li><a href=\\"https://zh.wikipedia.org/wiki/%E9%A1%9E%E5%88%A5%E5%9C%96\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">类图 - 维基百科，自由的百科全书</a></li>\\n<li><a href=\\"https://www.xiehai.zone/2021-12-11-mermaid-class-diagram.html#%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Mermaid之类图(classDiagram) | PasseRR's Blog</a></li>\\n<li><a href=\\"https://zhuanlan.zhihu.com/p/109655171\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">30分钟学会UML类图 - 知乎</a></li>\\n<li><a href=\\"https://mermaid.js.org/syntax/classDiagram.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Class diagrams | Mermaid</a> / <a href=\\"https://mermaid.nodejs.cn/syntax/classDiagram.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">类图 | Mermaid 中文网</a></li>\\n<li><a href=\\"https://soft.xiaoshujiang.com/docs/grammar/feature/mermaid/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">小书匠语法说明之mermaid | 小书匠</a></li>\\n</ul>","autoDesc":true}`);export{U as comp,w as data};
