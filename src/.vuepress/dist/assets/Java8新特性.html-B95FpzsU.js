import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as e,b as o}from"./app-CujtZVeU.js";const p={},n=o('<h1 id="java8-新特性" tabindex="-1"><a class="header-anchor" href="#java8-新特性"><span>Java8 新特性</span></a></h1><p><strong>Lambda表达式</strong></p><hr><p>Java8 发布的新特性</p><p>Lambda 允许把<strong>函数</strong>作为<strong>方法的参数</strong></p><p>Lambda表达式使得代码变得简洁紧凑</p><p>个人理解：</p><p>接口——抽象方法 需要实现</p><p>Lambda表达式传递函数——实现抽象方法</p><hr><p><strong>接口中的default方法</strong></p><p>接口中存在已实现的方法，不需要实现类实现该方法</p><p>关键字：default</p><p>缺点：当需要修改接口时候，需要修改全部实现该接口的类 ？</p><p>作用：目前的 java 8 之前的集合框架没有 foreach 方法，通常能想到的解决办法是在JDK里给相关的接口添加新的方法及实现。然而，对于已经发布的版本，没法在给接口添加新方法的同时不影响已有的实现。所以引进的默认方法，目的是为了解决接口的修改与现有的实现不兼容的问题。</p>',15),r=[n];function c(m,d){return e(),t("div",null,r)}const l=a(p,[["render",c],["__file","Java8新特性.html.vue"]]),h=JSON.parse('{"path":"/project/sky-take-out/Java8%E6%96%B0%E7%89%B9%E6%80%A7.html","title":"Java8 新特性","lang":"zh-CN","frontmatter":{"description":"Java8 新特性 Lambda表达式 Java8 发布的新特性 Lambda 允许把函数作为方法的参数 Lambda表达式使得代码变得简洁紧凑 个人理解： 接口——抽象方法 需要实现 Lambda表达式传递函数——实现抽象方法 接口中的default方法 接口中存在已实现的方法，不需要实现类实现该方法 关键字：default 缺点：当需要修改接口时候...","head":[["meta",{"property":"og:url","content":"https://raylan-chen.github.io/project/sky-take-out/Java8%E6%96%B0%E7%89%B9%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"MyBlog"}],["meta",{"property":"og:title","content":"Java8 新特性"}],["meta",{"property":"og:description","content":"Java8 新特性 Lambda表达式 Java8 发布的新特性 Lambda 允许把函数作为方法的参数 Lambda表达式使得代码变得简洁紧凑 个人理解： 接口——抽象方法 需要实现 Lambda表达式传递函数——实现抽象方法 接口中的default方法 接口中存在已实现的方法，不需要实现类实现该方法 关键字：default 缺点：当需要修改接口时候..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-10T17:09:05.000Z"}],["meta",{"property":"article:author","content":"raylan.chen"}],["meta",{"property":"article:modified_time","content":"2024-08-10T17:09:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java8 新特性\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-10T17:09:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"raylan.chen\\",\\"url\\":\\"\\"}]}"]]},"headers":[],"git":{"createdTime":1723294370000,"updatedTime":1723309745000,"contributors":[{"name":"Raylan.Chen","email":"chen.z.my@qq.com","commits":1}]},"readingTime":{"minutes":0.8,"words":241},"filePathRelative":"project/sky-take-out/Java8新特性.md","localizedDate":"2024年8月10日","excerpt":"\\n<p><strong>Lambda表达式</strong></p>\\n<hr>\\n<p>Java8 发布的新特性</p>\\n<p>Lambda 允许把<strong>函数</strong>作为<strong>方法的参数</strong></p>\\n<p>Lambda表达式使得代码变得简洁紧凑</p>\\n<p>个人理解：</p>\\n<p>接口——抽象方法 需要实现</p>\\n<p>Lambda表达式传递函数——实现抽象方法</p>\\n<hr>\\n<p><strong>接口中的default方法</strong></p>\\n<p>接口中存在已实现的方法，不需要实现类实现该方法</p>\\n<p>关键字：default</p>","autoDesc":true}');export{l as comp,h as data};
